name: Uploading the artifacts to s3
# This workflow is triggered on creating tags to master or a opendistro release branch
on:
  create:
  tags:
    -'*'
    branches:
      - master
      - opendistro-*

jobs:
  build:
    strategy:
      matrix:
        java: [12]
    # Job name
    name: Build Index Management with JDK ${{ matrix.java }}
    # This job runs on Linux
    runs-on: ubuntu-latest
    steps:
      # This step uses the checkout Github action: https://github.com/actions/checkout
      - name: Checkout Branch
        uses: actions/checkout@v1
      # This step uses the setup-java Github action: https://github.com/actions/setup-java
      - name: Set Up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      # Building zip, deb and rpm files
      - name: Build with Gradle
        run: ./gradlew build buildDeb buildRpm --no-daemon -Dbuild.snapshot=false

      - name: Create Artifact Path
        run: |
          mkdir -p index-management-artifacts
          cp ./build/distributions/*.zip index-management-artifacts
          cp ./build/distributions/*.deb index-management-artifacts
          cp ./build/distributions/*.rpm index-management-artifacts

     # AWS authentication
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      # This step uses the upload-artifact Github action: https://github.com/actions/upload-artifact
      - name: Upload Artifacts to S3
        run: |
          s3_path=s3://artifacts.opendistroforelasticsearch.amazon.com/downloads
          aws s3 cp index-management-artifacts/*.zip $s3_path/elasticsearch-plugins/opendistro-alerting/
          aws s3 cp index-management-artifacts/*.deb $s3_path/debs/opendistro-alerting/
          aws s3 cp index-management-artifacts/*.rpm $s3_path/rpms/opendistro-alerting/
      #   aws cloudfront create-invalidation --distribution-id ${{ secrets.DISTRIBUTION_ID }} --paths '/downloads/*'
